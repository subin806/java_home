package ex_241028;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;

import javax.swing.JFrame;
import javax.swing.JLabel;

public class Csb806Bar extends JFrame {
    private MyLabel bar = new MyLabel(100);

    public Csb806Bar(String title) {
        super(title);
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(null);

        bar.setBackground(Color.ORANGE);
        bar.setOpaque(true);
        bar.setLocation(20, 50);
        bar.setSize(300, 20);
        add(bar);

        // JFrame 자체에 KeyListener 추가
        this.addKeyListener(new KeyAdapter() {
            public void keyPressed(KeyEvent e) {
                bar.fill();
            }
        });

        setSize(350, 200);
        setVisible(true);

        // JFrame이 키 이벤트를 받을 수 있도록 설정
        this.setFocusable(true);
        this.requestFocusInWindow();

        // ConsumerThread 시작
        ConsumerThread th = new ConsumerThread(bar);
        th.start();
    }

    class MyLabel extends JLabel {
        private int barSize = 0; // 바의 크기
        private int maxBarSize;

        public MyLabel(int maxBarSize) {
            this.maxBarSize = maxBarSize;
        }

        public void paintComponent(Graphics g) {
            super.paintComponent(g);

            // 바의 현재 채워진 부분
            g.setColor(Color.MAGENTA);
            int width = (int) (((double) this.getWidth()) / maxBarSize * barSize);
            if (width > 0) {
                g.fillRect(0, 0, width, this.getHeight());
            }

            // 백분율 계산
            int percentage = (int) (((double) barSize / maxBarSize) * 100);

            // 바 밑에 "바의 크기는 : XX%" 텍스트 표시
            g.setColor(Color.BLUE);
            g.setFont(new Font("Arial", Font.BOLD, 12));
            g.drawString("바의 크기는 : " + percentage + "%", 10, this.getHeight() + 30); // 텍스트 위치 조정
        }

        synchronized void fill() {
            if (barSize < maxBarSize) {
                barSize++;
            }
            repaint(); // 바가 꽉 차도 repaint 호출
            notify();
        }

        synchronized void consume() {
            if (barSize > 0) {
                barSize--;
            }
            repaint(); // 바가 비어도 repaint 호출
            notify();
        }
    }

    class ConsumerThread extends Thread {
        private MyLabel bar;

        public ConsumerThread(MyLabel bar) {
            this.bar = bar;
        }

        @Override
        public void run() {
            while (true) {
                try {
                    sleep(200);
                    bar.consume();
                } catch (InterruptedException e) {
                    return;
                }
            }
        }
    }

    public static void main(String[] args) {
        new Csb806Bar("아무키나 빨리 눌러 바 채우기");
    } // main
} // class
